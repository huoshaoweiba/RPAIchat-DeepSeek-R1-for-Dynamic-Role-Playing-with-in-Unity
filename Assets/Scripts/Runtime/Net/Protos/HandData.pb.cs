// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: handData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HSR.MotionCapture.Net.Protos {

  /// <summary>Holder for reflection information generated from handData.proto</summary>
  public static partial class HandDataReflection {

    #region Descriptor
    /// <summary>File descriptor for handData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HandDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5oYW5kRGF0YS5wcm90bxoSdW5pdHlWZWN0b3IzLnByb3RvIkAKCEhhbmRE",
            "YXRhEhIKCmhhbmRlZG5lc3MYASABKAUSIAoJbGFuZG1hcmtzGAIgAygLMg0u",
            "VW5pdHlWZWN0b3IzQh+qAhxIU1IuTW90aW9uQ2FwdHVyZS5OZXQuUHJvdG9z",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HSR.MotionCapture.Net.Protos.UnityVector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HSR.MotionCapture.Net.Protos.HandData), global::HSR.MotionCapture.Net.Protos.HandData.Parser, new[]{ "Handedness", "Landmarks" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HandData : pb::IMessage<HandData>
      , global::System.IDisposable
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandData> _parser = new pb::MessageParser<HandData>(pb::MessagePool<HandData>.Get);
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HSR.MotionCapture.Net.Protos.HandDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void Dispose() {
      OnDispose();
      handedness_ = 0;
      for (int i = 0; i < landmarks_.Count; i++) {
        landmarks_[i].Dispose();
      }
      landmarks_.Clear();
      _unknownFields = null;
      pb::MessagePool<HandData>.Release(this);
    }

    partial void OnDispose();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandData(HandData other) : this() {
      handedness_ = other.handedness_;
      landmarks_ = other.landmarks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandData Clone() {
      return new HandData(this);
    }

    /// <summary>Field number for the "handedness" field.</summary>
    public const int HandednessFieldNumber = 1;
    private int handedness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Handedness {
      get { return handedness_; }
      set {
        handedness_ = value;
      }
    }

    /// <summary>Field number for the "landmarks" field.</summary>
    public const int LandmarksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HSR.MotionCapture.Net.Protos.UnityVector3> _repeated_landmarks_codec
        = pb::FieldCodec.ForMessage(18, global::HSR.MotionCapture.Net.Protos.UnityVector3.Parser);
    private readonly pbc::RepeatedField<global::HSR.MotionCapture.Net.Protos.UnityVector3> landmarks_ = new pbc::RepeatedField<global::HSR.MotionCapture.Net.Protos.UnityVector3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HSR.MotionCapture.Net.Protos.UnityVector3> Landmarks {
      get { return landmarks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Handedness != other.Handedness) return false;
      if(!landmarks_.Equals(other.landmarks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Handedness != 0) hash ^= Handedness.GetHashCode();
      hash ^= landmarks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Handedness != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Handedness);
      }
      landmarks_.WriteTo(output, _repeated_landmarks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Handedness != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Handedness);
      }
      landmarks_.WriteTo(ref output, _repeated_landmarks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Handedness != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Handedness);
      }
      size += landmarks_.CalculateSize(_repeated_landmarks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandData other) {
      if (other == null) {
        return;
      }
      if (other.Handedness != 0) {
        Handedness = other.Handedness;
      }
      landmarks_.Add(other.landmarks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Handedness = input.ReadInt32();
            break;
          }
          case 18: {
            landmarks_.AddEntriesFrom(input, _repeated_landmarks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Handedness = input.ReadInt32();
            break;
          }
          case 18: {
            landmarks_.AddEntriesFrom(ref input, _repeated_landmarks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
